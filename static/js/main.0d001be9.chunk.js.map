{"version":3,"sources":["components/Navbar/sun.png","components/About/logo.svg","components/About/momentjs.svg","components/About/tachyons.png","components/About/darksky.svg","components/About/mapquest.svg","components/Navbar/Navbar.js","components/Searchbar/Searchbar.js","components/WeatherPane/WeatherPane.js","components/DailyForecast/DailyForecast.js","components/About/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","bgStyle","background","maxHeight","iconSize","height","width","Navbar","onRouteChange","className","style","onClick","href","title","src","logo","alt","Searchbar","onChange","onSubmit","onLocation","isLoading","placeholder","type","sizeUnit","size","color","loading","WeatherPane","justifyContent","alignItems","isEmpty","obj","key","hasOwnProperty","toPercent","decVal","toFixed","handleValidWeather","weatherData","location","icon","currently","toUpperCase","replace","autoplay","summary","temperature","toPrecision","apparentTemperature","daily","data","temperatureHigh","temperatureLow","humidity","precipProbability","windSpeed","uvIndex","console","log","renderWeatherPane","props","badLoc","this","Component","DailyForecast","handleDailyForecast","forecast","forecastContainer","forecastDay","forecastDate","i","moment","unix","time","format","push","renderDailyForecast","About","fill","xmlns","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","d","tachyons","darksky","mapquest","momentjs","sunLogo","target","weatherURL","App","route","setState","handleChange","event","input","value","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","latLong","accuracy","undefined","preventDefault","a","fetch","state","then","response","json","catch","err","jsonMap","info","statuscode","results","locations","latLng","geocodeQualityCode","charAt","address","lat","lng","error","jsonWeather","street","city","adminArea5","adminArea3","request","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d001be9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.358bf617.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.11c48b7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/momentjs.b707220e.svg\";","module.exports = __webpack_public_path__ + \"static/media/tachyons.82ebb614.png\";","module.exports = __webpack_public_path__ + \"static/media/darksky.4b0e99f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mapquest.a218d70f.svg\";","import React from 'react';\nimport logo from './sun.png'\n\nconst bgStyle = {\n    background: '#027CB7',\n    maxHeight: '50px'\n};\n\nconst iconSize = {\n    height: '45px',\n    width: '45px'\n};\n\nconst Navbar = ({ onRouteChange }) => {\n    return (\n        <nav className=\"dt w-100 border-box ph5-ns fixed z-1\" style={bgStyle}>\n            <a onClick={ () => onRouteChange('home')} className=\"dtc v-mid mid-gray link dim w-50 pl2\" href=\"# \" title=\"Home\">\n                <img src={logo} className=\"dib w2 br-100 fl pt2\" style={iconSize} alt=\"Site Logo\"></img>\n                <p className=\"logoFont link dim white f4 f4-ns dib fl pl3\">CIRRUS</p>\n            </a>\n            <div className=\"dtc v-mid w-50 tr\">\n                <a onClick={ () => onRouteChange('home')} className=\"link dim white f6 f5-ns dib mr3 mr4-ns\" href=\"# \" title=\"Home\">Home</a>\n                <a onClick={ () => onRouteChange('about')} className=\"link dim white f6 f5-ns dib mr3 mr4-ns\" href=\"# \" title=\"About\">About</a>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;","import React from 'react'\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nconst Searchbar = ({ onChange, onSubmit, onLocation, isLoading }) => {\n\n    return (\n            <form className=\"mw6 center pa4 pt6 mb5 h5\">\n                <fieldset className=\"cf bn pa0 w-100 center\">\n                    <legend className=\"pa0 f5 f4-ns mb3 black-80 tl\">Enter an address</legend>\n                    <div className=\"cf\" style={{ maxHeight: '50px' }}>\n                        <div className=\"mb4 mb0-ns flex justify-center\">\n                            <input placeholder=\"Ex: Portland, OR\"\n                                   className=\"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns\"\n                                   onChange={onChange}\n                            />\n                            <input type=\"submit\"\n                                    className=\"f6 f5-l button-reset fl pv3 tc bn bg-animate bg-black-70 hover-bg-black white pointer w-100 w-25-m w-20-l br2-ns br--right-ns\"\n                                    onClick={onSubmit}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"tl\">\n                        <a className=\"f5 dark-blue no-underline\" href=\"#0\" onClick={onLocation}> \n                            <i className=\"fas fa-map-marker-alt pt3\"></i>\n                            &nbsp;Use my location\n                        </a>\n                    </div>\n                    <ClipLoader\n                        sizeUnit={\"px\"}\n                        size={40}\n                        color={'#000'}\n                        loading={isLoading}\n                    />\n                </fieldset>\n            </form>\n    );\n};\n\nexport default Searchbar;","import React, { Component } from 'react';\nimport Skycons from 'react-skycons'\nimport \"./WeatherPane.css\";\n\nclass WeatherPane extends Component {\n\n    iconSize = {\n        height: '125%',\n        width: '125%',\n        justifyContent: 'center',\n        alignItems: 'center'\n    };\n\n    isEmpty = (obj) => {\n        for(var key in obj) {\n            if(obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    };\n\n    toPercent = (decVal) => {\n        return (decVal * 100).toFixed(0);\n    };\n\n    // Build weather cards for current, valid weather\n    handleValidWeather = (weatherData, location) => {\n        return (\n            <div>\n                <h1>Current weather for {location}</h1>\n                <div className=\"center flex flex-column flex-row-l justify-between ph3 ph4-l pv3 w-60\">\n                    <div className=\"mainIcon w-100 w-33-l ph4-l mb4 mb0-l bg-white br3 mr2 card\">\n                        <div className=\"img\">\n                            <Skycons className=\"icon-size mt2\"\n                                     color='black'\n                                     icon={weatherData.currently.icon.toUpperCase().replace(/-/g, '_')}\n                                     autoplay={true}\n                                     style={this.iconSize}\n                            />\n                        </div>\n                        <p>{weatherData.currently.summary}</p>\n                    </div>\n                    <div className=\"w-100 w-33-l ph4-l mb4 mb0-l bg-white br3 mr2 card\">\n                        <h1 className=\"mainTemp\">{weatherData.currently.temperature.toPrecision(2)}°</h1>\n                        <p>Feels like: {weatherData.currently.apparentTemperature.toPrecision(2)}°</p>\n                        <p>\n                            Hi: {weatherData.daily.data[0].temperatureHigh.toPrecision(2)}°&nbsp;\n                            Low: {weatherData.daily.data[0].temperatureLow.toPrecision(2)}°\n                        </p>\n                    </div>\n                    <div className=\"details w-100 w-33-l ph4-l mb4 mb0-l bg-white br3 mr2 card\">\n                        <p><b>Humidity:</b> {this.toPercent(weatherData.currently.humidity)}%</p>\n                        <p><b>Precipitation:</b> {this.toPercent(weatherData.currently.precipProbability)}%</p>\n                        <p><b>Wind:</b> {weatherData.currently.windSpeed}&nbsp;mph</p>\n                        <p><b>UV Index:</b> {weatherData.currently.uvIndex}</p>\n                        {console.log(location)}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    // Check if location is valid and render it if so\n    renderWeatherPane = () => {\n        let { weatherData, location } = this.props;\n        if (weatherData.badLoc) {\n            return (\n                <p className=\"red\">Please enter a valid location.</p>\n            )\n        } else if (!this.isEmpty(weatherData)) {\n            return this.handleValidWeather(weatherData, location);\n        } else {\n            return (null)\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                {this.renderWeatherPane()}\n            </div>\n        )\n    }\n}\n\nexport default WeatherPane;","import React, { Component } from 'react';\nimport './DailyForecast.css';\nimport Skycons from 'react-skycons'\nimport moment from 'moment';\n\nclass DailyForecast extends Component {\n\n    // Check for empty object\n    isEmpty = (obj) => {\n        for(var key in obj) {\n            if(obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    };\n\n    toPercent = (decVal) => {\n        return (decVal * 100).toFixed(0);\n    };\n\n    // Create daily forecast cards and return to renderDailyForecast for display\n    handleDailyForecast = (weatherData) => {\n        let days = 7, forecast = [], forecastContainer = [], timezoneOffset = 7 * 60 * 60, forecastDay = '', forecastDate = '';\n        for (let i = 0; i < days; i++) {\n            // get the days for each forecast from the epoch time and shorten day to 3 letters\n            // add 7 hours to time received by dark sky due to offset of timezone\n            forecastDay = moment.unix(weatherData.daily.data[i].time + timezoneOffset).format('ddd');\n            forecastDate = moment.unix(weatherData.daily.data[i].time + timezoneOffset).format('MM/DD');\n            // Create card for one single day\n            forecast.push(\n                <article className=\"mw4 center bg-white br2 mv3 b--black-10 pl3 pr3 pt2 ba card\">\n                <div className=\"tc\">\n                    <Skycons className=\"icon-size\"\n                             color='black'\n                             icon={weatherData.daily.data[i].icon.toUpperCase().replace(/-/g, '_')}\n                             autoplay={true}\n                    />\n                    <h1 className=\"f3\">{forecastDay}</h1>\n                    <h1 className=\"f4 mb3 date-color\">{forecastDate}</h1>\n                    <h2 className=\"f5 fw4 gray mt0\">Hi: {weatherData.daily.data[i].temperatureHigh.toPrecision(2)}°</h2>\n                    <h2 className=\"f5 fw4 gray mt0\">Low: {weatherData.daily.data[i].temperatureLow.toPrecision(2)}°</h2>\n                    <h2 className=\"f5 fw4 gray mt0\">Precip: {this.toPercent(weatherData.daily.data[i].precipProbability)}%</h2>\n                </div>\n            </article>);\n        }\n        // Container for all cards\n        forecastContainer.push(<div className=\"mt4\"><h1>7 Day Forecast</h1>\n            <div className=\"w-80-ns flex flex-wrap center mb4\">{forecast}</div>\n        </div>);\n        return forecastContainer;\n\n    };\n\n    renderDailyForecast = () => {\n        let { weatherData } = this.props;\n        if (this.isEmpty(weatherData) || weatherData.badLoc) {\n            return (null)\n        } else {\n            return this.handleDailyForecast(weatherData);\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                {this.renderDailyForecast()}\n            </div>\n        );\n    }\n}\n\n\nexport default DailyForecast;","import React from 'react';\nimport Skycons from 'react-skycons'\nimport './About.css'\nimport logo from './logo.svg';\nimport momentjs from './momentjs.svg'\nimport tachyons from './tachyons.png';\nimport darksky from './darksky.svg';\nimport sunLogo from '../Navbar/sun.png';\nimport mapquest from './mapquest.svg';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nconst iconSize = {\n    height: '50%',\n    width: '50%'\n};\n\nconst About = () => {\n    return(\n        <div className=\"w-50-ns center pt5\">\n            <h1 className=\"f2-ns tracked pt4\">ABOUT</h1>\n            <p>A web application for viewing the weather in any U.S. city or address.</p>\n            <p>This web page was created by Micah Burnett and Michael Kelley for CS465P - Full Stack Web Development.</p>\n            <p>Check us out on GitHub!</p>\n            <a className=\"link near-black hover-silver dib mh3 tc\" href=\"https://github.com/mkelley010/\" title=\"GitHub\">\n                <svg className=\"dib h2 w2\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"\n                     fillRule=\"evenodd\" clipRule=\"evenodd\" strokeLinejoin=\"round\" strokeMiterlimit=\"1.414\">\n                    <path\n                        d=\"M8 0C3.58 0 0 3.582 0 8c0 3.535 2.292 6.533 5.47 7.59.4.075.547-.172.547-.385 0-.19-.007-.693-.01-1.36-2.226.483-2.695-1.073-2.695-1.073-.364-.924-.89-1.17-.89-1.17-.725-.496.056-.486.056-.486.803.056 1.225.824 1.225.824.714 1.223 1.873.87 2.33.665.072-.517.278-.87.507-1.07-1.777-.2-3.644-.888-3.644-3.953 0-.873.31-1.587.823-2.147-.083-.202-.358-1.015.077-2.117 0 0 .672-.215 2.2.82.638-.178 1.323-.266 2.003-.27.68.004 1.364.092 2.003.27 1.527-1.035 2.198-.82 2.198-.82.437 1.102.163 1.915.08 2.117.513.56.823 1.274.823 2.147 0 3.073-1.87 3.75-3.653 3.947.287.246.543.735.543 1.48 0 1.07-.01 1.933-.01 2.195 0 .215.144.463.55.385C13.71 14.53 16 11.534 16 8c0-4.418-3.582-8-8-8\"/>\n                </svg>\n                <span className=\"f6 db\">Michael Kelley</span>\n            </a>\n            <a className=\"link near-black hover-silver dib mh3 tc\" href=\"https://github.com/persistentlobster\" title=\"GitHub\">\n                <svg className=\"dib h2 w2\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"\n                     fillRule=\"evenodd\" clipRule=\"evenodd\" strokeLinejoin=\"round\" strokeMiterlimit=\"1.414\">\n                    <path\n                        d=\"M8 0C3.58 0 0 3.582 0 8c0 3.535 2.292 6.533 5.47 7.59.4.075.547-.172.547-.385 0-.19-.007-.693-.01-1.36-2.226.483-2.695-1.073-2.695-1.073-.364-.924-.89-1.17-.89-1.17-.725-.496.056-.486.056-.486.803.056 1.225.824 1.225.824.714 1.223 1.873.87 2.33.665.072-.517.278-.87.507-1.07-1.777-.2-3.644-.888-3.644-3.953 0-.873.31-1.587.823-2.147-.083-.202-.358-1.015.077-2.117 0 0 .672-.215 2.2.82.638-.178 1.323-.266 2.003-.27.68.004 1.364.092 2.003.27 1.527-1.035 2.198-.82 2.198-.82.437 1.102.163 1.915.08 2.117.513.56.823 1.274.823 2.147 0 3.073-1.87 3.75-3.653 3.947.287.246.543.735.543 1.48 0 1.07-.01 1.933-.01 2.195 0 .215.144.463.55.385C13.71 14.53 16 11.534 16 8c0-4.418-3.582-8-8-8\"/>\n                </svg>\n                <span className=\"f6 db\">Micah Burnett</span>\n            </a>\n            <h1 className=\"f2-ns tracked mt4\">POWERED BY</h1>\n            <img src={logo} className=\"react-logo\" alt=\"react logo\"/><br/>\n            <a href=\"https://reactjs.org/\" className=\"f3-ns tracked mb2 no-underline\">React.js</a>\n            <p className=\"mb4\">A JavaScript library for building user interfaces.</p>\n            <img src={tachyons} className=\"tachyons-logo\" alt=\"tachyons logo\" /><br/>\n            <a href=\"https://tachyons.io/\" className=\"f3-ns tracked mb2 no-underline\">Tachyons</a>\n            <p className=\"mb4\">A CSS framework.</p>\n            <img src={darksky} className=\"darksky-logo mb4\" alt=\"dark sky logo\"/><br/>\n            <a href=\"https://darksky.net/dev\" className=\"f3-ns tracked mb2 no-underline\">Dark Sky</a>\n            <p className=\"mb4\">A web API for weather forecasts.</p>\n            <img src={mapquest} className=\"mapquest-logo mb4\" alt=\"mapquest logo\"/><br/>\n            <a href=\"https://developer.mapquest.com/\" className=\"f3-ns tracked mb2 no-underline\">MapQuest</a>\n            <p className=\"mb4\">A web API for geocoding locations.</p>\n            <img src={momentjs} className=\"moment-logo mb4\" alt=\"moment.js logo\"/><br/>\n            <a href=\"https://momentjs.com/\" className=\"f3-ns tracked mb2 no-underline\">Moment.js</a>\n            <p className=\"mb4\">A JavaScript library for parsing, validating, manipulating, and formatting dates.</p>\n            <Skycons\n                className=\"icon-size mt2\"\n                color='black'\n                icon={'RAIN'}\n                autoplay={true}\n                style={iconSize}\n            />\n            <br/>\n            <a href=\"https://github.com/roadmanfong/react-skycons\" className=\"f3-ns tracked mb2 no-underline\">Skycons</a>\n            <p className=\"mb4\">A set of animated weather icons ported to React components.</p>\n            <img src={sunLogo} className=\"sun-logo mb4 mt3\" alt=\"website logo\" />\n            <br/>\n            <a href=\"https://www.flaticon.com/free-icon/sun_1164903\" className=\"f3-ns tracked mb2 no-underline\">Flaticon</a>\n            <p className=\"mb5\">\n                Icons made by <a href=\"https://www.freepik.com/\" title=\"Freepik\">Freepik </a> \n                from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com </a> \n                is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\">CC 3.0 BY</a>\n            </p>\n            <div className=\"mb3\">\n                <ClipLoader\n                sizeUnit={\"em\"}\n                size={7}\n                color={'#000'}\n                loading={true}\n                />\n                <br/>\n            </div>\n            <a href=\"https://github.com/davidhu2000/react-spinners\" className=\"f3-ns tracked mb2 no-underline\">React Spinners</a>\n            <p className=\"mb5\">A collection of loading spinners for React.</p>\n        </div>\n    );\n};\n\nexport default About;","import React, { Component } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport WeatherPane from './components/WeatherPane/WeatherPane';\nimport DailyForecast from './components/DailyForecast/DailyForecast';\nimport About from './components/About/About';\nimport './App.css';\n\nconst key = 'ac5d624a201bb2a2c6c0af0421abfe0e';\nconst weatherURL = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${key}/`;\nconst mapQuestKey = 'AOpagPUEPGJ7MLysAbqVElfofmi9ViWH';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: '',\n            weatherData: {},\n            location: '',\n            route: 'home',\n            isLoading: false\n        }\n    }\n\n    // Routing handler\n    onRouteChange = (route) => {\n        this.setState({ route: route });\n    };\n\n    // Form change handler\n    handleChange = (event) => {\n        this.setState({ input: event.target.value })\n    };\n\n    // Fetches coordinates from geolocation and submit form\n    onLocation = () => {\n        this.setState( { isLoading: true });\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.setState({ \n                input: position.coords.latitude + ', ' + position.coords.longitude\n            }, () => {\n                this.onSubmit();\n                }\n            );\n        });\n    };\n\n    // Request to Dark Sky and MapQuest APIs for weather and location data\n    onSubmit = (event) => {\n        let latLong;\n        let accuracy;\n\n        this.setState( { isLoading: true });\n\n        // Prevent page from refreshing on submit\n        if (event !== undefined) {\n            event.preventDefault();\n        }\n        const request = async () => {\n            const jsonMap = await fetch(`https://www.mapquestapi.com/geocoding/v1/address?key=${mapQuestKey}&location=${this.state.input}`)\n                .then(response => response.json())\n                .catch(err => console.log(err));\n\n            if (jsonMap.info.statuscode !== 400) {\n                latLong = jsonMap.results[0].locations[0].latLng;\n                accuracy = jsonMap.results[0].locations[0].geocodeQualityCode.charAt(3);\n            }\n\n            if (accuracy === 'A' || accuracy === 'B') {\n                let street, city, state;\n                let address = \"\";\n                const jsonWeather = await fetch(weatherURL + latLong.lat + ',' + latLong.lng)\n                    .then(response => response.json())\n                    .catch(error => console.error(error));\n                this.setState({ weatherData: jsonWeather });\n                \n                street = jsonMap.results[0].locations[0].street;\n                city = jsonMap.results[0].locations[0].adminArea5;\n                state = jsonMap.results[0].locations[0].adminArea3;\n           \n                if (street !== \"\") {\n                    address = street + ', ';\n                }\n                address += city + ', ' + state;\n                this.setState({ location: address, isLoading: false });\n            } else {\n                this.setState({ weatherData: '', isLoading: false });\n                this.setState({ weatherData: { badLoc: true } });\n            }\n        };\n        request();\n    };\n\n    render() {\n        const { route, isLoading } = this.state;\n        return (\n            <div className=\"App background-gradient\">\n                <Navbar onRouteChange={this.onRouteChange} />\n                {   route === 'home'\n                    ?\n                        <div>\n                            <Searchbar onChange={this.handleChange} onSubmit={this.onSubmit} onLocation={this.onLocation} isLoading={isLoading}/>\n                            <WeatherPane weatherData={this.state.weatherData} location={this.state.location}/>\n                            <DailyForecast weatherData={this.state.weatherData}/>\n                        </div>\n                    :\n                        <div>\n                            <About />\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}